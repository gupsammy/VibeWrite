
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Thread rules
    match /threads/{threadId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() 
        && request.resource.data.noteCount == 0;
      allow update: if isAuthenticated()
        && (
          // Only allow updating specific fields
          request.resource.data.diff(resource.data).affectedKeys()
            .hasOnly(['title', 'description', 'tags', 'noteCount', 'updatedAt'])
        );
      allow delete: if false; // Disable deletion for now
    }

    // Note rules
    match /notes/{noteId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated()
        && exists(/databases/$(database)/documents/threads/$(request.resource.data.threadId));
      allow update: if false; // Notes are immutable
      allow delete: if false; // Disable deletion for now
    }
  }
}